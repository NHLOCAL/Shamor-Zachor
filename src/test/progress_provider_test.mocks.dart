// Mocks generated by Mockito 5.4.4 from annotations
// in shamor_vezachor/test/progress_provider_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:mockito/mockito.dart' as _i1;
import 'package:shamor_vezachor/models/book_model.dart' as _i6;
import 'package:shamor_vezachor/models/progress_model.dart' as _i2;
import 'package:shamor_vezachor/services/progress_service.dart' as _i5;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeFullProgressMap_0 extends _i1.SmartFake
    implements _i2.FullProgressMap {
  _FakeFullProgressMap_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeCompletionDatesMap_1 extends _i1.SmartFake
    implements _i2.CompletionDatesMap {
  _FakeCompletionDatesMap_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [ProgressService].
///
/// See the documentation for Mockito's code generation for more information.
class MockProgressService extends _i1.Mock implements _i5.ProgressService {
  MockProgressService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.FullProgressMap> loadFullProgressData() =>
      (super.noSuchMethod(
        Invocation.method(
          #loadFullProgressData,
          [],
        ),
        returnValue:
            _i4.Future<_i2.FullProgressMap>.value(_FakeFullProgressMap_0(
          this,
          Invocation.method(
            #loadFullProgressData,
            [],
          ),
        )),
      ) as _i4.Future<_i2.FullProgressMap>);

  @override
  _i4.Future<Map<String, Map<String, _i2.PageProgress>>> loadBookProgress(
    String? categoryName,
    String? bookName,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #loadBookProgress,
          [
            categoryName,
            bookName,
          ],
        ),
        returnValue:
            _i4.Future<Map<String, Map<String, _i2.PageProgress>>>.value(
                <String, Map<String, _i2.PageProgress>>{}),
      ) as _i4.Future<Map<String, Map<String, _i2.PageProgress>>>);

  @override
  _i4.Future<void> saveProgress(
    String? categoryName,
    String? bookName,
    int? daf,
    String? amudKey,
    String? columnName,
    bool? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveProgress,
          [
            categoryName,
            bookName,
            daf,
            amudKey,
            columnName,
            value,
          ],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> saveAllMasechta(
    String? categoryName,
    String? bookName,
    _i6.BookDetails? bookDetails,
    bool? markAsLearned,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveAllMasechta,
          [
            categoryName,
            bookName,
            bookDetails,
            markAsLearned,
          ],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<_i2.CompletionDatesMap> loadCompletionDates() =>
      (super.noSuchMethod(
        Invocation.method(
          #loadCompletionDates,
          [],
        ),
        returnValue: _i4.Future<_i2.CompletionDatesMap>.value(
            _FakeCompletionDatesMap_1(
          this,
          Invocation.method(
            #loadCompletionDates,
            [],
          ),
        )),
      ) as _i4.Future<_i2.CompletionDatesMap>);

  @override
  _i4.Future<void> saveCompletionDate(
    String? categoryName,
    String? bookName,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveCompletionDate,
          [
            categoryName,
            bookName,
          ],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<String?> getCompletionDate(
    String? categoryName,
    String? bookName,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getCompletionDate,
          [
            categoryName,
            bookName,
          ],
        ),
        returnValue: _i4.Future<String?>.value(),
      ) as _i4.Future<String?>);
}
